* Firebase db Custom password manager - use firebase as storage, encrypt data and store.
* Add register: store user data in firebase :warning: (redirection pending)
* Add Google signin option(https://github.com/googleworkspace/node-samples/blob/main/people/quickstart/index.js)
* Add login: check from firebase,
* Login reset password
* Add saving passbook form
* Show list of stored passbook with name in encrypted password show button is provided
* Edit/view passbook form
* Delete password from passbook
* On click of view ask for mpin(verified from db i.e by calling api) then show decrypted password
* Enable to copy to the clipboard
* Deploy in firebase to access publicly
* https://keepassxc.org/project/

# Formats

user = {
    name: '',
    email: '',
    password: '',
    mpin: ''
}

website = {
    name: '',
    url: '',
    password: ''
}

# Google sign in method
function onSignIn(googleUser) {
  var profile = googleUser.getBasicProfile();
  console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.
  console.log('Name: ' + profile.getName());
  console.log('Image URL: ' + profile.getImageUrl());
  console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.
}

# Google sign out method
<a href="#" onclick="signOut();">Sign out</a>
<script>
  function signOut() {
    var auth2 = gapi.auth2.getAuthInstance();
    auth2.signOut().then(function () {
      console.log('User signed out.');
    });
  }
</script>

# Session Implementation
https://www.section.io/engineering-education/session-management-in-nodejs-using-expressjs-and-express-session/

# Postman Docs
https://documenter.getpostman.com/view/6552648/2s8YYPJ1RY#intro
